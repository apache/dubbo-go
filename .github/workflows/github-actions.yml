name: CI

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: "*"

jobs:

  build:
    name: ${{ matrix.os }} - Go ${{ matrix.go_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      # If you want to matrix build , you can append the following list.
      matrix:
        go_version:
          - 1.13
        os:
          - ubuntu-latest

    steps:

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go_version }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          # Cache
          path: ~/go/pkg/mod
          # Cache key
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Get dependencies
        run: |
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          else
              go get -v -t -d ./...
          fi

      - name: License Check
        run: |
          go fmt ./... && [[ -z `git status -s` ]]
          sh before_validate_license.sh
          chmod u+x /tmp/tools/license/license-header-checker
          /tmp/tools/license/license-header-checker -v -a -r -i vendor  /tmp/tools/license/license.txt . go  && [[ -z `git status -s` ]]

      - name: Test
        run: |
          chmod u+x before_ut.sh && ./before_ut.sh
          go mod vendor && go test ./... -coverprofile=coverage.txt -covermode=atomic
          chmod +x integrate_test.sh && ./integrate_test.sh

      - name: Coverage
        run: bash <(curl -s https://codecov.io/bash)