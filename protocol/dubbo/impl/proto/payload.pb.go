/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/payload.proto

package payload

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// equivalent java StringValue
type StringValue struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringValue) Reset()         { *m = StringValue{} }
func (m *StringValue) String() string { return proto.CompactTextString(m) }
func (*StringValue) ProtoMessage()    {}
func (*StringValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_434bbf44284586dc, []int{0}
}

func (m *StringValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringValue.Unmarshal(m, b)
}
func (m *StringValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringValue.Marshal(b, m, deterministic)
}
func (m *StringValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringValue.Merge(m, src)
}
func (m *StringValue) XXX_Size() int {
	return xxx_messageInfo_StringValue.Size(m)
}
func (m *StringValue) XXX_DiscardUnknown() {
	xxx_messageInfo_StringValue.DiscardUnknown(m)
}

var xxx_messageInfo_StringValue proto.InternalMessageInfo

func (m *StringValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// equivalent java Int32Value
type Int32Value struct {
	Value                int32    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Int32Value) Reset()         { *m = Int32Value{} }
func (m *Int32Value) String() string { return proto.CompactTextString(m) }
func (*Int32Value) ProtoMessage()    {}
func (*Int32Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_434bbf44284586dc, []int{1}
}

func (m *Int32Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Int32Value.Unmarshal(m, b)
}
func (m *Int32Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Int32Value.Marshal(b, m, deterministic)
}
func (m *Int32Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Int32Value.Merge(m, src)
}
func (m *Int32Value) XXX_Size() int {
	return xxx_messageInfo_Int32Value.Size(m)
}
func (m *Int32Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Int32Value.DiscardUnknown(m)
}

var xxx_messageInfo_Int32Value proto.InternalMessageInfo

func (m *Int32Value) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

// equivalent java MapValue
type Map struct {
	Attachments          map[string]string `protobuf:"bytes,1,rep,name=attachments,proto3" json:"attachments,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Map) Reset()         { *m = Map{} }
func (m *Map) String() string { return proto.CompactTextString(m) }
func (*Map) ProtoMessage()    {}
func (*Map) Descriptor() ([]byte, []int) {
	return fileDescriptor_434bbf44284586dc, []int{2}
}

func (m *Map) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Map.Unmarshal(m, b)
}
func (m *Map) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Map.Marshal(b, m, deterministic)
}
func (m *Map) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Map.Merge(m, src)
}
func (m *Map) XXX_Size() int {
	return xxx_messageInfo_Map.Size(m)
}
func (m *Map) XXX_DiscardUnknown() {
	xxx_messageInfo_Map.DiscardUnknown(m)
}

var xxx_messageInfo_Map proto.InternalMessageInfo

func (m *Map) GetAttachments() map[string]string {
	if m != nil {
		return m.Attachments
	}
	return nil
}

// copied from dubbo GenericProtobufObjectOutput.java
// Messages used for transporting debug information between server and client.
// An element in a stack trace, based on the Java type of the same name.
//
// See: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/StackTraceElement.html
type StackTraceElementProto struct {
	// The fully qualified name of the class containing the execution point
	// represented by the stack trace element.
	ClassName string `protobuf:"bytes,1,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	// The name of the method containing the execution point represented by the
	// stack trace element
	MethodName string `protobuf:"bytes,2,opt,name=method_name,json=methodName,proto3" json:"method_name,omitempty"`
	// The name of the file containing the execution point represented by the
	// stack trace element, or null if this information is unavailable.
	FileName string `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	// The line number of the source line containing the execution point represented
	// by this stack trace element, or a negative number if this information is
	// unavailable.
	LineNumber           int32    `protobuf:"varint,4,opt,name=line_number,json=lineNumber,proto3" json:"line_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StackTraceElementProto) Reset()         { *m = StackTraceElementProto{} }
func (m *StackTraceElementProto) String() string { return proto.CompactTextString(m) }
func (*StackTraceElementProto) ProtoMessage()    {}
func (*StackTraceElementProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_434bbf44284586dc, []int{3}
}

func (m *StackTraceElementProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StackTraceElementProto.Unmarshal(m, b)
}
func (m *StackTraceElementProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StackTraceElementProto.Marshal(b, m, deterministic)
}
func (m *StackTraceElementProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StackTraceElementProto.Merge(m, src)
}
func (m *StackTraceElementProto) XXX_Size() int {
	return xxx_messageInfo_StackTraceElementProto.Size(m)
}
func (m *StackTraceElementProto) XXX_DiscardUnknown() {
	xxx_messageInfo_StackTraceElementProto.DiscardUnknown(m)
}

var xxx_messageInfo_StackTraceElementProto proto.InternalMessageInfo

func (m *StackTraceElementProto) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *StackTraceElementProto) GetMethodName() string {
	if m != nil {
		return m.MethodName
	}
	return ""
}

func (m *StackTraceElementProto) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *StackTraceElementProto) GetLineNumber() int32 {
	if m != nil {
		return m.LineNumber
	}
	return 0
}

// An exception that was thrown by some code, based on the Java type of the same name.
//
// See: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Throwable.html
type ThrowableProto struct {
	// The name of the class of the exception that was actually thrown. Downstream readers
	// of this message may or may not have the actual class available to initialize, so
	// this is just used to prefix the message of a generic exception type.
	OriginalClassName string `protobuf:"bytes,1,opt,name=original_class_name,json=originalClassName,proto3" json:"original_class_name,omitempty"`
	// The message of this throwable. Not filled if there is no message.
	OriginalMessage string `protobuf:"bytes,2,opt,name=original_message,json=originalMessage,proto3" json:"original_message,omitempty"`
	// The stack trace of this Throwable.
	StackTrace []*StackTraceElementProto `protobuf:"bytes,3,rep,name=stack_trace,json=stackTrace,proto3" json:"stack_trace,omitempty"`
	// The cause of this Throwable. Not filled if there is no cause.
	Cause                *ThrowableProto `protobuf:"bytes,4,opt,name=cause,proto3" json:"cause,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ThrowableProto) Reset()         { *m = ThrowableProto{} }
func (m *ThrowableProto) String() string { return proto.CompactTextString(m) }
func (*ThrowableProto) ProtoMessage()    {}
func (*ThrowableProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_434bbf44284586dc, []int{4}
}

func (m *ThrowableProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThrowableProto.Unmarshal(m, b)
}
func (m *ThrowableProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThrowableProto.Marshal(b, m, deterministic)
}
func (m *ThrowableProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThrowableProto.Merge(m, src)
}
func (m *ThrowableProto) XXX_Size() int {
	return xxx_messageInfo_ThrowableProto.Size(m)
}
func (m *ThrowableProto) XXX_DiscardUnknown() {
	xxx_messageInfo_ThrowableProto.DiscardUnknown(m)
}

var xxx_messageInfo_ThrowableProto proto.InternalMessageInfo

func (m *ThrowableProto) GetOriginalClassName() string {
	if m != nil {
		return m.OriginalClassName
	}
	return ""
}

func (m *ThrowableProto) GetOriginalMessage() string {
	if m != nil {
		return m.OriginalMessage
	}
	return ""
}

func (m *ThrowableProto) GetStackTrace() []*StackTraceElementProto {
	if m != nil {
		return m.StackTrace
	}
	return nil
}

func (m *ThrowableProto) GetCause() *ThrowableProto {
	if m != nil {
		return m.Cause
	}
	return nil
}

func init() {
	proto.RegisterType((*StringValue)(nil), "StringValue")
	proto.RegisterType((*Int32Value)(nil), "Int32Value")
	proto.RegisterType((*Map)(nil), "Map")
	proto.RegisterMapType((map[string]string)(nil), "Map.AttachmentsEntry")
	proto.RegisterType((*StackTraceElementProto)(nil), "StackTraceElementProto")
	proto.RegisterType((*ThrowableProto)(nil), "ThrowableProto")
}

func init() { proto.RegisterFile("proto/payload.proto", fileDescriptor_434bbf44284586dc) }

var fileDescriptor_434bbf44284586dc = []byte{
	// 353 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x4f, 0x4f, 0xea, 0x40,
	0x14, 0xc5, 0x53, 0xfa, 0x78, 0x79, 0xdc, 0x26, 0x0f, 0x1c, 0xfc, 0xd3, 0x68, 0x8c, 0xa4, 0xc6,
	0x04, 0x37, 0x35, 0x81, 0x85, 0xc4, 0x85, 0x89, 0x31, 0x2c, 0x5c, 0x40, 0x4c, 0x21, 0x6e, 0x9b,
	0x4b, 0x19, 0xa1, 0x61, 0x3a, 0x6d, 0x66, 0x06, 0x0d, 0x1b, 0x3f, 0x86, 0x9f, 0xca, 0x0f, 0x65,
	0x66, 0xc6, 0x02, 0x2a, 0xbb, 0x99, 0xdf, 0x39, 0xbd, 0x3d, 0xf7, 0x64, 0xa0, 0x59, 0x88, 0x5c,
	0xe5, 0x57, 0x05, 0xae, 0x58, 0x8e, 0xd3, 0xd0, 0xdc, 0x82, 0x73, 0xf0, 0x46, 0x4a, 0xa4, 0x7c,
	0xf6, 0x84, 0x6c, 0x49, 0xc9, 0x3e, 0x54, 0x5f, 0xf4, 0xc1, 0x77, 0x5a, 0x4e, 0xbb, 0x16, 0xd9,
	0x4b, 0x10, 0x00, 0x3c, 0x70, 0xd5, 0xed, 0xec, 0xf0, 0x54, 0x4b, 0xcf, 0x1b, 0xb8, 0x03, 0x2c,
	0xc8, 0x35, 0x78, 0xa8, 0x14, 0x26, 0xf3, 0x8c, 0x72, 0x25, 0x7d, 0xa7, 0xe5, 0xb6, 0xbd, 0xce,
	0x41, 0x38, 0xc0, 0x22, 0xbc, 0xdb, 0xf0, 0x3e, 0x57, 0x62, 0x15, 0x6d, 0x3b, 0x8f, 0x6f, 0xa1,
	0xf1, 0xd3, 0x40, 0x1a, 0xe0, 0x2e, 0xe8, 0xea, 0x2b, 0x8b, 0x3e, 0x6e, 0xfe, 0x5d, 0xd9, 0xca,
	0x77, 0x53, 0xe9, 0x39, 0xc1, 0xbb, 0x03, 0x87, 0x23, 0x85, 0xc9, 0x62, 0x2c, 0x30, 0xa1, 0x7d,
	0x46, 0xf5, 0x9c, 0x47, 0xbd, 0x23, 0x39, 0x05, 0x48, 0x18, 0x4a, 0x19, 0x73, 0xcc, 0xca, 0xcd,
	0x6a, 0x86, 0x0c, 0x31, 0xa3, 0xe4, 0x0c, 0xbc, 0x8c, 0xaa, 0x79, 0x3e, 0xb5, 0xba, 0x9d, 0x0c,
	0x16, 0x19, 0xc3, 0x09, 0xd4, 0x9e, 0x53, 0x46, 0xad, 0xec, 0x1a, 0xf9, 0x9f, 0x06, 0xe5, 0xd7,
	0x2c, 0xe5, 0x34, 0xe6, 0xcb, 0x6c, 0x42, 0x85, 0xff, 0xc7, 0x74, 0x02, 0x1a, 0x0d, 0x0d, 0x09,
	0x3e, 0x1c, 0xf8, 0x3f, 0x9e, 0x8b, 0xfc, 0x15, 0x27, 0x8c, 0xda, 0x40, 0x21, 0x34, 0x73, 0x91,
	0xce, 0x52, 0x8e, 0x2c, 0xfe, 0x95, 0x6c, 0xaf, 0x94, 0xee, 0xd7, 0x09, 0x2f, 0xa1, 0xb1, 0xf6,
	0x67, 0x54, 0x4a, 0x9c, 0x95, 0x31, 0xeb, 0x25, 0x1f, 0x58, 0x4c, 0x7a, 0xe0, 0x49, 0xdd, 0x42,
	0xac, 0x74, 0x0d, 0xbe, 0x6b, 0xfa, 0x3f, 0x0a, 0x77, 0x37, 0x13, 0x81, 0x5c, 0x73, 0x72, 0x01,
	0xd5, 0x04, 0x97, 0x92, 0x9a, 0x15, 0xbc, 0x4e, 0x3d, 0xfc, 0x1e, 0x3a, 0xb2, 0xea, 0xe4, 0xaf,
	0x79, 0x37, 0xdd, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x04, 0x4d, 0x68, 0x3a, 0x4e, 0x02, 0x00,
	0x00,
}
